{
	// * MAIN
	"reactComponent": {
		"prefix": "rc",
		"body": [
			"import { FC, ReactNode } from 'react'",
			"import cls from './${1:${TM_FILENAME_BASE}}.module.scss'",
			"import { classNames as cl } from 'shared/lib/classNames/classNames'",
			"import { useTranslation } from 'react-i18next'",
			"",
			"interface ${1:${TM_FILENAME_BASE}}Props {",
			" className?: string",
			" children?: ReactNode",
			"}",
			"",
			"export const ${1:${TM_FILENAME_BASE}}: FC<${1:${TM_FILENAME_BASE}}Props> = ({ className, children, ...otherProps }) => {",
			"const { t } = useTranslation()",
			"",
			"	return (",
			"		<div className={classNames(cls.${1:${TM_FILENAME_BASE}}, {}, [className])} {...otherProps}>",
			"			{children}",
			"		</div>",
			"	)",
			"}"
		],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"className": {
		"prefix": "cn",
		"body": ["className={cl(cls.${1:${TM_FILENAME_BASE}}, {$2}, [$3])}"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"useState": {
		"prefix": "us",
		"body": [
			"const [is${1:name}, setIs${1:Name}] = useState<${2:boolean}>($3)"
		],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"useEffect": {
		"prefix": "uf",
		"body": ["useEffect(() => {", "	${1:return () => {}}", "}, [$2])"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"export": {
		"prefix": "t",
		"body": ["{t('${1:Привет мир!}')}"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},

	// * FAST
	"export": {
		"prefix": "e",
		"body": ["export "],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"const": {
		"scope": "typescript, typescriptreact, javascript, javascriptreact",
		"prefix": "c",
		"body": ["const $1 = $2"]
	},
	"printToConsole": {
		"prefix": "cl",
		"body": ["console.log($1)"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"quotesCode": {
		"prefix": "q",
		"body": ["{`${$1}`}"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"for": {
		"scope": "typescript, typescriptreact, javascript, javascriptreact",
		"prefix": "for",
		"body": ["for (let i = 0; i < ${1:arr}; i++) {$2}"]
	},
	"anonymousFunction": {
		"key": "anonymousFunction",
		"prefix": "af",
		"body": ["(${1:el}) => {${2:second}}"],
		"description": "Creates an anonymous function",
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	},
	"export function": {
		"key": "reactFunctionalExportComponent",
		"prefix": "ef",
		"body": ["export function ${1:${TM_FILENAME_BASE}}() {", "	return $2", "}"],
		"scope": "typescript, typescriptreact, javascript, javascriptreact"
	}
}
